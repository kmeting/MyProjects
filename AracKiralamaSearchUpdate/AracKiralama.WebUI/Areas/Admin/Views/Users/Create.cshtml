@model AracKiralama.Entities.Kullanici

@{
    ViewData["Title"] = "Kullanıcı Ekle";
}

<h1>Kullanıcı Ekle</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Adi" class="control-label"></label>
                <input asp-for="Adi" class="form-control" />
                <span asp-validation-for="Adi" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Soyadi" class="control-label"></label>
                <input asp-for="Soyadi" class="form-control" />
                <span asp-validation-for="Soyadi" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Telefon" class="control-label">Telefon Numarası</label>
                <div>
                    <input id="TelefonInput" asp-for="Telefon" class="form-control" maxlength="13" placeholder="(5__) - (___) - (____)" />
                </div>
                <span asp-validation-for="Telefon" class="text-danger"></span>
            </div>

           
            <div class="form-group">
                <label asp-for="Adres" class="control-label"></label>
                <input asp-for="Adres" class="form-control" />
                <span asp-validation-for="Adres" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tc" class="control-label"></label>
                <input asp-for="Tc" class="form-control" />
                <span asp-validation-for="Tc" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ehliyet" class="control-label"></label>
                <input asp-for="Ehliyet" class="form-control" type="file" accept=".pdf" />
                <span asp-validation-for="Ehliyet" class="text-danger"></span>
            </div>
           

            <div class="form-group">
                <label asp-for="KullaniciAdi" class="control-label"></label>
                <input asp-for="KullaniciAdi" class="form-control" />
                <span asp-validation-for="KullaniciAdi" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sifre" class="control-label"></label>
                <input asp-for="Sifre" class="form-control" />
                <span asp-validation-for="Sifre" class="text-danger"></span>
            </div>
          
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="AktifMi" /> @Html.DisplayNameFor(model => model.AktifMi)
                </label>
            </div>
            
            <div class="form-group">
                <label asp-for="RolId" class="control-label"></label>
                <select asp-for="RolId" class ="form-select" asp-items="ViewBag.Roller">

                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Ekle" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        //$("TelefonInput input").keydown(function () {
        //    $("input").css("background-color", "yellow");
        //});
        $("#TelefonInput").keyup(function () {
            var len = this.value.length;
            if (len == 3 || len == 7 || len == 10 || len == 14) {
                $(this).val(this.value + "-");
            }
        });
    });

    //document.getElementById("TelefonInput").addEventListener("input", function () {
    //    let value = this.value.replace(/\D/g, '');
    //    let formattedValue = '';
    //    console.log(value.length)

    //    //if (value.length > 0) {
    //    //    formattedValue += '(' + value.substring(0, 4);

    //    //    if (value.length > 2) {
    //    //        formattedValue += ') - (' + value.substring(4, 7);

    //    //        if (value.length > 5) {
    //    //            formattedValue += ') - (' + value.substring(7, 11);
    //    //        } else {
    //    //            formattedValue += ')';
    //    //        }

    //    //        if (value.length > 9) {
    //    //            formattedValue += ' - ' + value.substring(9, 13);
    //    //        }
    //    //    }
    //    //}

    //    this.value = formattedValue;
    //});
</script>